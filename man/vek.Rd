% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vek.R
\name{vek}
\alias{vek}
\alias{is_lgl_vec}
\alias{is_lgl_vec_x}
\alias{is_lgl_vec_x1}
\alias{is_lgl_vec_n}
\alias{is_lgl_vec_nx}
\alias{is_lgl_vec_nx1}
\alias{is_int_vec}
\alias{is_int_vec_x}
\alias{is_int_vec_x1}
\alias{is_int_vec_n}
\alias{is_int_vec_nx}
\alias{is_int_vec_nx1}
\alias{is_dbl_vec}
\alias{is_dbl_vec_x}
\alias{is_dbl_vec_y}
\alias{is_dbl_vec_z}
\alias{is_dbl_vec_xy}
\alias{is_dbl_vec_yz}
\alias{is_dbl_vec_xyz}
\alias{is_dbl_vec_x1}
\alias{is_dbl_vec_y1}
\alias{is_dbl_vec_xy1}
\alias{is_dbl_vec_yz1}
\alias{is_dbl_vec_xyz1}
\alias{is_dbl_vec_n}
\alias{is_dbl_vec_nx}
\alias{is_dbl_vec_ny}
\alias{is_dbl_vec_nz}
\alias{is_dbl_vec_nxy}
\alias{is_dbl_vec_nyz}
\alias{is_dbl_vec_nxyz}
\alias{is_dbl_vec_nx1}
\alias{is_dbl_vec_ny1}
\alias{is_dbl_vec_nxy1}
\alias{is_dbl_vec_nyz1}
\alias{is_dbl_vec_nxyz1}
\alias{is_chr_vec}
\alias{is_chr_vec_x}
\alias{is_chr_vec_b}
\alias{is_chr_vec_xb}
\alias{is_chr_vec_x1}
\alias{is_chr_vec_b1}
\alias{is_chr_vec_xb1}
\alias{is_chr_vec_n}
\alias{is_chr_vec_nx}
\alias{is_chr_vec_nb}
\alias{is_chr_vec_nxb}
\alias{is_chr_vec_nx1}
\alias{is_chr_vec_nb1}
\alias{is_chr_vec_nxb1}
\alias{is_num_vec}
\alias{is_num_vec_x}
\alias{is_num_vec_y}
\alias{is_num_vec_z}
\alias{is_num_vec_xy}
\alias{is_num_vec_yz}
\alias{is_num_vec_xyz}
\alias{is_num_vec_x1}
\alias{is_num_vec_y1}
\alias{is_num_vec_yz1}
\alias{is_num_vec_xy1}
\alias{is_num_vec_xyz1}
\alias{is_num_vec_n}
\alias{is_num_vec_nx}
\alias{is_num_vec_ny}
\alias{is_num_vec_nz}
\alias{is_num_vec_nxy}
\alias{is_num_vec_nyz}
\alias{is_num_vec_nxyz}
\alias{is_num_vec_nx1}
\alias{is_num_vec_ny1}
\alias{is_num_vec_nyz1}
\alias{is_num_vec_nxy1}
\alias{is_num_vec_nxyz1}
\title{vek}
\usage{
is_lgl_vec(x)

is_lgl_vec_x(x)

is_lgl_vec_x1(x)

is_lgl_vec_n(x)

is_lgl_vec_nx(x)

is_lgl_vec_nx1(x)

is_int_vec(x)

is_int_vec_x(x)

is_int_vec_x1(x)

is_int_vec_n(x)

is_int_vec_nx(x)

is_int_vec_nx1(x)

is_dbl_vec(x)

is_dbl_vec_x(x)

is_dbl_vec_y(x)

is_dbl_vec_z(x)

is_dbl_vec_xy(x)

is_dbl_vec_yz(x)

is_dbl_vec_xyz(x)

is_dbl_vec_x1(x)

is_dbl_vec_y1(x)

is_dbl_vec_xy1(x)

is_dbl_vec_yz1(x)

is_dbl_vec_xyz1(x)

is_dbl_vec_n(x)

is_dbl_vec_nx(x)

is_dbl_vec_ny(x)

is_dbl_vec_nz(x)

is_dbl_vec_nxy(x)

is_dbl_vec_nyz(x)

is_dbl_vec_nxyz(x)

is_dbl_vec_nx1(x)

is_dbl_vec_ny1(x)

is_dbl_vec_nxy1(x)

is_dbl_vec_nyz1(x)

is_dbl_vec_nxyz1(x)

is_chr_vec(x)

is_chr_vec_x(x)

is_chr_vec_b(x)

is_chr_vec_xb(x)

is_chr_vec_x1(x)

is_chr_vec_b1(x)

is_chr_vec_xb1(x)

is_chr_vec_n(x)

is_chr_vec_nx(x)

is_chr_vec_nb(x)

is_chr_vec_nxb(x)

is_chr_vec_nx1(x)

is_chr_vec_nb1(x)

is_chr_vec_nxb1(x)

is_num_vec(x)

is_num_vec_x(x)

is_num_vec_y(x)

is_num_vec_z(x)

is_num_vec_xy(x)

is_num_vec_yz(x)

is_num_vec_xyz(x)

is_num_vec_x1(x)

is_num_vec_y1(x)

is_num_vec_yz1(x)

is_num_vec_xy1(x)

is_num_vec_xyz1(x)

is_num_vec_n(x)

is_num_vec_nx(x)

is_num_vec_ny(x)

is_num_vec_nz(x)

is_num_vec_nxy(x)

is_num_vec_nyz(x)

is_num_vec_nxyz(x)

is_num_vec_nx1(x)

is_num_vec_ny1(x)

is_num_vec_nyz1(x)

is_num_vec_nxy1(x)

is_num_vec_nxyz1(x)
}
\arguments{
\item{x}{\code{any}.}
}
\value{
\code{logical}. Returns \code{TRUE} or \code{FALSE}.
}
\description{
Predicate helper functions for testing atomic vectors.

All functions take a single argument \code{x} and check whether it's of the target
type of base-R atomic vector, returning \code{TRUE} or \code{FALSE}. Some additionally
check for value. Classes that extend any base-R atomic vector return \code{FALSE}.
Vectors that carry any attributes other than 'names' return \code{FALSE}.

Function names may include a suffix that encodes what additional conditions
are evaluated. A select combination of these conditions is provided for each
type. Naming scheme:
\itemize{
\item n: no 'names' attribute
\item x: no \code{NA} (type specific)
\item y: no \code{NaN}
\item z: no \code{Inf} or \code{-Inf}
\item b: no blank characters, i.e. \code{""}
\item 1: is of length 1
}

For example:
\itemize{
\item \code{is_dbl_vec(x)} evaluates whether \code{x} is a base-R typeof double atomic
vector, of any length.
\item \code{is_dbl_vec_xz(x)} will additionaly evaluate whether \code{x} contains no \code{NA}
nor \code{Inf} values. Note, \code{NaN} values are still allowed here, which is
dissimilar to behavior from base-R functions like \code{is.na(x)} or \code{anyNA(x)},
wherein both \code{NA} and \code{NaN} values yield \code{TRUE}.
\item \code{is_num_vec_xyz1(x)} effectively evaluates whether \code{x} is a single real
number.
}

Supported types: logical, integer, double, numeric, and character.
}
\seealso{
\code{\link[=vector]{vector()}}
}
